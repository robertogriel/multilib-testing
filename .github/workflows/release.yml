name: Build and Release Libraries

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Extract version from tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Update composer.json with version
        run: |
          for lib in libs/*; do
            cd "$lib"
            composer_file="composer.json"
            if [ -f "$composer_file" ]; then
              jq --arg version "${RELEASE_TAG}" '.version = $version' "$composer_file" > tmp.$$.json && mv tmp.$$.json "$composer_file"
            fi
            cd - > /dev/null
          done

      - name: Generate ZIPs
        run: |
          mkdir dist
          for lib in libs/*; do
            lib_name=$(basename "$lib")
            cd "$lib"
            zip -r "../../dist/${lib_name}.zip" . -x "*.git*" -x "vendor/*" -x "dist/*"
            cd - > /dev/null
          done

      - name: Prepare Upload URL
        env:
          UPLOAD_URL: ${{ github.event.release.upload_url }}
        run: echo "CLEAN_UPLOAD_URL=${UPLOAD_URL%\{*}" >> $GITHUB_ENV

      - name: Upload Release Assets
        env:
          TOKEN: ${{ secrets.TOKEN }}
          UPLOAD_URL: ${{ env.CLEAN_UPLOAD_URL }}
        run: |
          for file in dist/*; do
            FILENAME=$(basename "$file")
            curl --fail -X POST \
              -H "Authorization: token $TOKEN" \
              -F "file=@$file" \
              "${UPLOAD_URL}?name=${FILENAME}&label=${FILENAME}"
          done
